<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.abbot.schimneylife.dao.user.IAuthorityDao">
	<resultMap id="BaseResultMap" type="com.abbot.schimneylife.pojo.user.Authority">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="pid" property="pid" jdbcType="INTEGER" />
		<result column="author_name" property="name" jdbcType="VARCHAR" />
		<result column="author_describe" property="describe" jdbcType="VARCHAR" />
		<result column="author_No" property="order" jdbcType="INTEGER" />
		<result column="author_uri" property="uri" jdbcType="VARCHAR" />
		<result column="create_user_name" property="author" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
		<collection property="children" column="id"
		select="com.abbot.schimneylife.dao.user.IAuthorityDao.findByPid"></collection>
	</resultMap>
	<resultMap id="baseMap" type="com.abbot.schimneylife.pojo.user.Authority">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="pid" property="pid" jdbcType="INTEGER" />
		<result column="author_name" property="name" jdbcType="VARCHAR" />
		<result column="author_describe" property="describe" jdbcType="VARCHAR" />
		<result column="author_No" property="order" jdbcType="INTEGER" />
		<result column="author_uri" property="uri" jdbcType="VARCHAR" />
		<result column="create_user_name" property="author" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id,pid,author_name,author_describe,author_No,author_uri,create_user_name,create_time
	</sql>
	<insert id="insert">
		insert into user_authority (
		pid,author_name,author_describe,author_No,author_uri,create_user_name,create_time
		)
		values (
		#{pid,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{describe,jdbcType=VARCHAR},
		#{order,jdbcType=INTEGER},
		#{uri,jdbcType=VARCHAR},
		#{author,jdbcType=VARCHAR},
		now())
	</insert>
	<update id="update" parameterType="com.abbot.schimneylife.pojo.user.Authority">
		update user_authority
		<set>
			<if test="pid != null">
				pid = #{pid,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				author_name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="describe != null">
				author_describe = #{describe,jdbcType=VARCHAR},
			</if>
			<if test="order != null">
				author_No = #{order,jdbcType=INTEGER},
			</if>
			<if test="uri != null">
				author_uri = #{uri,jdbcType=VARCHAR},
			</if>
			<if test="author != null">
				create_user_name = #{author,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<delete id="delete">
		delete from user_authority 
		<trim prefix="where" suffixOverrides="and|or">
			<if test="id !=null">
				and id = #{id,jdbcType=INTEGER}
			</if>
			<if test="pid !=null">
				and pid = #{pid,jdbcType=INTEGER}
			</if>
		</trim>
	</delete>
	<select id="findByPage" resultMap="baseMap">
		select <include refid="Base_Column_List"></include> from user_authority 
		<if test="author !=null">
			<bind name="pattern" value="'%'+ author +'%'"/>
			where create_user_name like #{pattern,jdbcType=VARCHAR}
		</if>
		order by create_time desc limit #{firstResult,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	</select>
	<select id="countTotal" resultType="Integer">
		select count(*) from user_authority 
		<if test="author !=null">
			<bind name="pattern" value="'%'+ author +'%'"/>
			where create_user_name like #{pattern,jdbcType=VARCHAR}
		</if>
	</select>
	<select id="findAllFather" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"></include> from user_authority where pid = 0
	</select>
	<select id="findByRoleId" resultType="Integer">
		select authority_id from user_role_to_authority where role_id = #{roleId,jdbcType=INTEGER}
	</select>
	<select id="findByPid" resultMap="baseMap">
		select <include refid="Base_Column_List"></include> from user_authority where pid = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteRelationByRoleId">
		delete from user_role_to_authority where role_id = #{roleId,jdbcType=INTEGER}
	</delete>
	<insert id="insertRelation">
		insert into user_role_to_authority(role_id,authority_id,create_time) values(#{roleId,jdbcType=INTEGER},#{authorityId,jdbcType=INTEGER},now())
	</insert>
	<select id="findByRole" resultMap="baseMap">
		select user_authority.id,user_authority.pid,user_authority.author_name,user_authority.author_describe,author_No,author_uri,create_user_name,user_authority.create_time from user_authority 
		left join user_role_to_authority as t on user_authority.id = t.authority_id 
		where role_id = #{roleId,jdbcType=INTEGER}
	</select>
</mapper>