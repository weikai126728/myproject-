<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd    
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.abbot.schimneylife" />
	<!-- 引入配置文件 -->
	<!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<property name="location" value="classpath:jdbc.properties" /> </bean> -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.mysql.driver}" />
		<property name="url" value="${jdbc.mysql.url}" />
		<property name="username" value="${jdbc.mysql.username}" />
		<property name="password" value="${jdbc.mysql.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${jdbc.initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${jdbc.maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${jdbc.maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${jdbc.minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${jdbc.maxWait}"></property>
	</bean>
	<bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.mysql.driver2}" />
		<property name="url" value="${jdbc.mysql.url2}" />
		<property name="username" value="${jdbc.mysql.username2}" />
		<property name="password" value="${jdbc.mysql.password2}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${jdbc.initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${jdbc.maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${jdbc.maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${jdbc.minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${jdbc.maxWait}"></property>
	</bean>
	<bean id="dataSource3" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.mysql.driver3}" />
		<property name="url" value="${jdbc.mysql.url3}" />
		<property name="username" value="${jdbc.mysql.username3}" />
		<property name="password" value="${jdbc.mysql.password3}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${jdbc.initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${jdbc.maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${jdbc.maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${jdbc.minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${jdbc.maxWait}"></property>
	</bean>
	<bean id="dataSource4" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.mysql.driver4}" />
		<property name="url" value="${jdbc.mysql.url4}" />
		<property name="username" value="${jdbc.mysql.username4}" />
		<property name="password" value="${jdbc.mysql.password4}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${jdbc.initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${jdbc.maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${jdbc.maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${jdbc.minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${jdbc.maxWait}"></property>
	</bean>
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations">
			<array>
				<value>classpath:com/abbot/schimneylife/mapper/user/*.xml</value>
				<value>classpath:com/abbot/schimneylife/mapper/shopping/*.xml</value>
				<value>classpath:com/abbot/schimneylife/mapper/weixin/*.xml</value>
				<!-- <value>classpath:com/abbot/schimneylife/mapper/weixin/*.xml</value> -->
			</array>
		</property>
	</bean>
	<bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource2" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations">
			<array>
				<value>classpath:com/abbot/schimneylife/mapper/media/*.xml</value>
			</array>
		</property>
	</bean>
	<bean id="sqlSessionFactory3" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource3" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations">
			<array>
				<value>classpath:com/abbot/schimneylife/mapper/fenxiao/*.xml</value>
			</array>
		</property>
	</bean>
	<bean id="sqlSessionFactory4" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource4" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations">
			<array>
				<value>classpath:com/abbot/schimneylife/mapper/company/*.xml</value>
			</array>
		</property>
	</bean>
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<!-- value="com.abbot.schimneylife.dao.user,com.abbot.schimneylife.dao.shopping,com.abbot.schimneylife.dao.weixin" /> -->
		<property name="basePackage"
			value="com.abbot.schimneylife.dao.user,com.abbot.schimneylife.dao.shopping,
			com.abbot.schimneylife.dao.weixin" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"
			value="com.abbot.schimneylife.dao.media" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory2"></property>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.abbot.schimneylife.dao.fenxiao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory3"></property>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.abbot.schimneylife.dao.company" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory4"></property>
	</bean>
	<!-- 开启事务注解驱动 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<qualifier value="tsm" />
	</bean>
	<bean id="transactionManager3"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource3" />
		<qualifier value="fenxiao" />
	</bean>
	<bean id="transactionManager4"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource4" />
		<qualifier value="company" />
	</bean>
</beans>