<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.abbot.schimneylife.dao.user.ITencentInfoDao">
	<resultMap id="BaseResultMap" type="com.abbot.schimneylife.pojo.user.TencentInfo">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="nickname" property="nickName" jdbcType="VARCHAR" />
		<result column="openid" property="openid" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="INTEGER" />
		<result column="headimgurl" property="headimgurl" jdbcType="VARCHAR" />
		<result column="subscribe_time" property="subscribeTime" jdbcType="DATE" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		
	</resultMap>
	<sql id="Base_Column_List">
		user_info.id, user_realname, user_nickname, user_age,
		user_gender,
		user_openid,
		user_address,
		user_phone, user_No,
		user_password,
		user_salt, user_status, user_info.create_time,
		user_info.update_time,user_birthday
	</sql>
	<select id="selectByLoginName" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		,user_role_info.id as role_id,role_name,role_level
		from user_info
		left
		join
		user_to_role
		on
		user_info.id = user_to_role.user_info_id
		left join
		user_role_info
		on
		user_to_role.role_id = user_role_info.id
		where
		user_nickname = #{loginName,jdbcType=VARCHAR}
	</select>
	<select id="countNickName" resultType="java.lang.Integer"
		parameterType="java.lang.String">
		select count(*) from user_info
		where user_nickname =
		#{nickName,jdbcType=VARCHAR}
	</select>
	<select id="findById" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		,user_role_info.id as role_id,role_name,role_level
		from user_info
		left join user_to_role on user_info.id = user_to_role.user_info_id
		left
		join user_role_info on user_to_role.role_id = user_role_info.id
		where user_info.id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectByPhone" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		,role_id,role_name,role_level
		from user_info
		left join
		user_to_role
		on
		user_info.id = user_to_role.user_info_id
		left join
		user_role_info
		on
		user_to_role.role_id = user_role_info.id
		where
		user_phone = #{phone,jdbcType=VARCHAR}
	</select>
	<select id="selectAllUser" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_info
		RIGHT JOIN user_customer ON
		user_customer.user_info_id=user_info.id
		RIGHT JOIN user_to_role on
		user_info.id = user_to_role.user_info_id
		left join user_role_info on
		user_to_role.role_id = user_role_info.id
		where user_to_role.role_id='5'
	</select>
	<!-- <select id="selectCount" resultType="java.lang.Integer"> select count(*) 
		from user_info </select> -->
	<select id="countPhone" resultType="java.lang.Integer"
		parameterType="java.lang.String">
		select count(*) from user_info where
		user_phone=#{phone,jdbcType=VARCHAR}
	</select>
	<select id="selectUserByName" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_info
		where user_nickname like
		concat('%',#{nickName,jdbcType=VARCHAR},'%')
	</select>
	<insert id="insert" parameterType="com.abbot.schimneylife.pojo.user.User"
		keyProperty="id" useGeneratedKeys="true">

		insert into user_info (
		user_realname, user_nickname, user_age, user_gender,
		user_openid,
		user_address,
		user_phone, user_No, user_password,
		user_salt,
		user_status, create_time,
		update_time
		)
		values (
		#{realName,jdbcType=VARCHAR},
		#{nickName,jdbcType=VARCHAR},
		#{age,jdbcType=INTEGER},
		#{gender,jdbcType=INTEGER},
		#{openid,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR}
		,
		#{phone,jdbcType=VARCHAR},
		#{number,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}
		,
		#{salt,jdbcType=VARCHAR},
		#{status,jdbcType=INTEGER}, now(),now())

	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.abbot.schimneylife.pojo.user.User">
		update user_info
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="forgetPassword" parameterType="com.abbot.schimneylife.pojo.user.User">
		update user_info set
		user_password=#{password,jdbcType=VARCHAR},user_salt=#{salt,jdbcType=VARCHAR}
		where user_phone=#{phone,jdbcType=VARCHAR}
	</update>

	<update id="updatePhone" parameterType="com.abbot.schimneylife.pojo.user.User">
		update user_info set
		user_phone=#{phone,jdbcType=VARCHAR}
		where id=#{id,jdbcType=INTEGER}
	</update>

	<update id="updateUser" parameterType="com.abbot.schimneylife.pojo.user.User">
		update user_info
		<trim prefix="set" suffixOverrides=","
			suffix=" where id=#{id,jdbcType=INTEGER}">
			<if test="nickName !=null">
				user_nickname=#{nickName,jdbcType=VARCHAR},
			</if>
			<if test="salt !=null">
				user_salt=#{salt,jdbcType=VARCHAR},
			</if>
			<if test="gender !=null">
				user_gender=#{gender,jdbcType=INTEGER},
			</if>
			<if test="birthday !=null">
				user_birthday=#{birthday,jdbcType=VARCHAR},
			</if>
			<if test="password !=null">
				user_password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="phone !=null">
				user_phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="realName !=null">
				user_realname = #{realName,jdbcType=VARCHAR},
			</if>
		</trim>
	</update>
	<update id="updateMessage" parameterType="com.abbot.schimneylife.pojo.user.User">
		update user_info set

		user_nickname=#{nickName,jdbcType=VARCHAR},
		user_gender=#{gender,jdbcType=INTEGER},
		user_phone=#{phone,jdbcType=VARCHAR},
		user_status=#{status,jdbcType=INTEGER}

		where
		id=#{id,jdbcType=INTEGER}
	</update>
	<update id="updatePassword" parameterType="com.abbot.schimneylife.pojo.user.User">
		update user_info set
		user_password=#{password,jdbcType=VARCHAR},
		user_salt=#{salt,jdbcType=VARCHAR} where
		id=#{id,jdbcType=INTEGER}
	</update>

	<update id="disable">
		update user_info set user_status = 0 where
		id =
		#{id,jdbcType=INTEGER}
	</update>

	<update id="enable">
		update user_info set user_status = 1 where
		id =
		#{id,jdbcType=INTEGER}
	</update>

	<delete id="deleteUser">
		delete from user_info where id=#{id,jdbcType=INTEGER}
	</delete>
	<select id="findByLevel" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"></include>
		,role.id as role_id,role.role_name,role.role_level from user_to_role
		as t
		left join user_info on t.user_info_id = user_info.id
		left join user_role_info as role on role.id = t.role_id
		<trim prefix="where " prefixOverrides="and|or">
			<if test="level!=null">
				and role.role_level = #{level,jdbcType=INTEGER}
			</if>
			<if test="level==null">
				and role.role_level &lt;=0
			</if>
			<if test="like!=null">
				<bind name="pattern" value="'%'+like+'%'" />
				and (user_info.user_realname like #{pattern,jdbcType=VARCHAR} or
				user_info.user_phone like #{pattern,jdbcType=VARCHAR})
			</if>
		</trim>
		order by user_info.create_time
		<choose>
			<when test="order==null">desc</when>
			<otherwise>${order}</otherwise>
		</choose>
		limit #{firstResult,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
	</select>
	<select id="countByLevel" resultType="Integer">
		select count(*) from user_to_role as t
		left join user_info on t.user_info_id = user_info.id
		left join user_role_info as role on role.id = t.role_id
		<trim prefix="where " prefixOverrides="and|or">
			<if test="level!=null">
				and role.role_level = #{level,jdbcType=INTEGER}
			</if>
			<if test="level==null">
				and role.role_level &lt;=0
			</if>
			<if test="like!=null">
				<bind name="pattern" value="'%'+like+'%'" />
				and (user_info.user_realname like #{pattern,jdbcType=VARCHAR} or
				user_info.user_phone like #{pattern,jdbcType=VARCHAR})
			</if>
		</trim>
	</select>
</mapper>